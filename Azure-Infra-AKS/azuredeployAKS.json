{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aksClusterName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the Managed AKS Cluster resource."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.11.3",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of agent nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 50
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "maxPods": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "linuxAdminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Linux Virtual Machines."
            }
        },
        "sshRSAPublicKey": {
            "type": "string",
            "metadata": {
                "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
            }
        },
        "clientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring"
        },
        "clientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring"
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "boolean flag to turn on and off of http application routing"
            }
        },
        "networkPlugin": {
            "type": "string",
            "defaultValue": "kubenet",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "boolean flag to turn on and off of RBAC"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "centralus",
            "metadata": {
                "description": "The location of the Managed Cluster resource."
            }
        },
        "enableOmsAgent": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "boolean flag to turn on and off of omsagent addon"
            }
        },
        "omsWorkspaceRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Resource Group that contains OMS Workspace."
            }
        },
        "omsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the OMS Workspace."
            }
        },
        "omsWorkspaceLocation": {
            "type": "string",
            "defaultValue": "eastus",
            "metadata": {
                "description": "The location of the Managed Cluster resource."
            }
        }
    },
    "variables": {
        "aksClusterName": "[parameters('aksClusterName')]",        
        "adminUsername": "[parameters('linuxAdminUsername')]",
        "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
        "location": "[toLower(replace(if(empty(parameters('location')), resourceGroup().location, parameters('location')), ' ', ''))]",
        "subscriptionId": "[subscription().subscriptionId]",
        "omsWorkspaceId": "[toLower(concat(resourceId(variables('subscriptionId'), parameters('omsWorkspaceRGName'), 'microsoft.operationalinsights/workspaces', parameters('omsWorkspaceName'))))]",
        "omsWorkspaceLocation": "[toLower(replace(parameters('omsWorkspaceLocation'), ' ', ''))]",
        "containerInsightsName": "[concat('ContainerInsights', '(', parameters('omsWorkspaceName'), ')')]"
    },
    "resources": [
        {
            "apiVersion": "2018-03-31",
            "dependsOn": [],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[variables('location')]",
            "name": "[variables('aksClusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "omsagent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[variables('omsWorkspaceId')]"
                        }
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "osType": "[parameters('osType')]",
                        "maxPods": "[parameters('maxPods')]",
                        "storageProfile": "ManagedDisks"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "[variables('adminUsername')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[variables('sshRSAPublicKey')]"
                            }
                        ]
                    }
                },
                "servicePrincipalProfile": {
                    "clientId": "[parameters('clientId')]",
                    "secret": "[parameters('clientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]"
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SolutionDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('omsWorkspaceRGName')]",
            "subscriptionId": "[variables('subscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "location": "[variables('omsWorkspaceLocation')]",
                            "name": "[variables('containerInsightsName')]",
                            "properties": {
                                "workspaceResourceId": "[variables('omsWorkspaceId')]"
                            },
                            "plan": {
                                "name": "[variables('containerInsightsName')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            }
                        }
                    ]
                }
            },
            "dependsOn": []
        }
    ],
    "outputs": {
        "aksClusterName": {
            "type": "string",
            "value": "[variables('aksClusterName')]"
        },
        "location": {
            "type": "string",
            "value": "[variables('location')]"
        },
        "subscriptionId": {
            "type": "string",
            "value": "[variables('subscriptionId')]"
        },
        "omsWorkspaceId": {
            "type": "string",
            "value": "[variables('omsWorkspaceId')]"
        },
        "omsWorkspaceLocation": {
            "type": "string",
            "value": "[variables('omsWorkspaceLocation')]"
        },
        "containerInsightsName": {
            "type": "string",
            "value": "[variables('containerInsightsName')]"
        },
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).fqdn]"
        }
    }
}